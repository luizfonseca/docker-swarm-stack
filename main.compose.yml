version: "3.8"

x-default-logging: &x-default-logging
  options:
    max-size: "12m"
    max-file: "5"
  driver: json-file

# The following network is to be appended to every
# service that needs to be exposed to the outside world
networks:
  public:
    external: true
  traefik-metrics:
    external: true


configs:
  traefik_config: # v2 config
    file: ./configs/traefik.yaml
    template_driver: golang
  traefik_v3_config-2024-04-18-1:
    file: ./configs/traefik.v3.yaml
    template_driver: golang
  


services:
  traefik:
    # Beware: traefik:v3 will have different properties
    image: "traefik:v3.0.0-rc5" 
    command:
      - --configfile=/etc/config/traefik.yml
    configs:
      - source: traefik_v3_config-2024-04-18-1
        target: /etc/config/traefik.yml
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 96M
      placement:
        constraints:
          - node.role==manager
      labels:
        # Careful! Enabling this makes traefik accessible from outside the swarm.
        - traefik.enable=false
        # - "traefik.http.routers.traefik.rule=Host(`traefik.local.tld`)"
        # - "traefik.http.routers.traefik.service=api@internal"
        # - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    networks:
      - public
      - traefik-metrics
    # Using `host` allows traefik to see the real client's IP
    # If you are using a loadbalancer that provides it as a header, then you can probably 
    # use `ingress` mode instead.
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./configs/acme.json:/acme.json
      - ./plugins-local:/plugins-local
    logging: *x-default-logging

  
  gh-oauth:
    image: luizfonseca/traefik-github-oauth-server:0.3.2
    environment:
      GITHUB_OAUTH_CLIENT_ID: "${GITHUB_OAUTH_CLIENT_ID:-notSet}"
      GITHUB_OAUTH_CLIENT_SECRET: "${GITHUB_OAUTH_CLIENT_SECRET:-notSet}"
      # External URL
      API_BASE_URL: "https://gh-oauth${DOMAIN_SUFFIX}.${DOMAIN_NAME:?err}"
    networks:
      - public
    deploy:
      replicas: 1        
      resources:
        limits:
          cpus: "0.1"
          memory: 30M
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.oauth-proxy.rule=Host(`gh-oauth${DOMAIN_SUFFIX}.${DOMAIN_NAME:?err}`)"
        - "traefik.http.routers.oauth-proxy.entrypoints=websecure"
        - "traefik.http.routers.oauth-proxy.tls.certresolver=leresolver"

        # Container port
        - "traefik.http.services.oauth-proxy.loadbalancer.server.port=80"
    logging: *x-default-logging